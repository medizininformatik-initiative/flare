services:
  generate-cert:
    image: alpine/openssl
    networks:
      test-oauth:
    entrypoint: ["sh", "-c"]
    command:
      - openssl req -nodes -subj "/CN=proxy"
        -addext "basicConstraints=CA:false"
        -addext "subjectAltName = DNS:secure-data-store, DNS:secure-keycloak"
        -x509 -newkey rsa:4096 -days 99999
        -keyout /keys/key.pem -out /certs/cert.pem
    volumes:
      - "certs:/certs"
      - "keys:/keys"
  generate-trust-store:
    image: eclipse-temurin:21
    networks:
      test-oauth:
    entrypoint: ["bash", "-c"]
    command:
      - rm -rf "/trusts/trust-store.p12";
        keytool -importcert -storetype PKCS12 -keystore "/trusts/trust-store.p12"
        -storepass "insecure" -alias ca -file "/certs/cert.pem" -noprompt
    volumes:
      - "certs:/certs"
      - "trusts:/trusts"
    depends_on:
      generate-cert:
        condition: service_completed_successfully
  keycloak:
    image: "keycloak/keycloak:26.2.0"
    command: ["start", "--import-realm"]
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/9000;echo -e \"GET /health/ready HTTP/1.1\r\nhost: localhost\r\nConnection: close\r\n\r\n\" >&3;grep \"HTTP/1.1 200 OK\" <&3"]
      interval: "5s"
      timeout: "5s"
      retries: 3
      start_period: "30s"
    networks:
      test-oauth:
    environment:
      KC_HOSTNAME: "https://secure-keycloak:8443"
      KC_HOSTNAME_ADMIN: "https://secure-keycloak:8443"
      KC_HTTP_RELATIVE_PATH: "/"
      KC_PROXY_HEADERS: "xforwarded"
      KC_HTTP_ENABLED: "true"
      KC_HEALTH_ENABLED: "true"
      KC_LOG_LEVEL: "info"
    volumes:
      - "./realm-test.json:/opt/keycloak/data/import/realm-test.json"
  proxy:
    image: "nginx:1.28.0"
    healthcheck:
      test: ["CMD-SHELL", "curl --fail -s http://localhost:8080"]
      interval: "5s"
      timeout: "5s"
      retries: 3
      start_period: "5s"
    networks:
      test-oauth:
        aliases:
          - secure-data-store
          - secure-keycloak
    volumes:
      - "./nginx.conf:/etc/nginx/nginx.conf"
      - "certs:/etc/nginx/certs"
      - "keys:/etc/nginx/keys"
    depends_on:
      generate-cert:
        condition: service_completed_successfully
      keycloak:
        condition: service_healthy
  data-store:
    image: "samply/blaze:0.34"
    healthcheck:
      test: ["CMD-SHELL", "curl --fail -s http://localhost:8080/health"]
      interval: "5s"
      timeout: "5s"
      retries: 3
      start_period: "60s"
    networks:
      test-oauth:
    environment:
      BASE_URL: "https://data-store:8080"
      JAVA_TOOL_OPTIONS: "-Xmx1g"
      OPENID_PROVIDER_URL: "https://secure-keycloak:8443/realms/test"
      OPENID_CLIENT_TRUST_STORE: "/trusts/trust-store.p12"
      OPENID_CLIENT_TRUST_STORE_PASS: "insecure"
      LOG_LEVEL: "debug"
    ports:
      - "8082:8080"
    volumes:
      - "data-store-data:/app/data"
      - "trusts:/trusts"
    depends_on:
      generate-trust-store:
        condition: service_completed_successfully
      keycloak:
        condition: service_healthy
      proxy:
        condition: service_healthy
  flare:
    image: "flare:latest"
    healthcheck:
      test: ["CMD-SHELL", "curl --fail -s http://localhost:8080/cache/stats"]
      interval: "5s"
      timeout: "5s"
      retries: 3
      start_period: "60s"
    networks:
      test-oauth:
    environment:
      JAVA_TOOL_OPTIONS: "-Xmx1g"
      FLARE_FHIR_SERVER: "https://secure-data-store:8443/fhir"
      FLARE_FHIR_OAUTH_ISSUER_URI: "https://secure-keycloak:8443/realms/test"
      FLARE_FHIR_OAUTH_CLIENT_ID: "account"
      FLARE_FHIR_OAUTH_CLIENT_SECRET: "test"
      LOG_LEVEL: "debug"
    ports:
      - "8080:8080"
    volumes:
      - "flare-cache:/app/cache"
      - "../synthea-test-mapping:/app/ontology"
      - "certs:/app/certs"
    depends_on:
      generate-cert:
        condition: service_completed_successfully
      data-store:
        condition: service_healthy
      proxy:
        condition: service_healthy
volumes:
  data-store-data:
  certs:
  keys:
  trusts:
  flare-cache:
networks:
  test-oauth:
