user  nginx;
worker_processes  1;

error_log  /dev/stdout debug;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include /etc/nginx/mime.types;
    log_format main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /dev/stdout main;
    sendfile on;
    keepalive_timeout 65;

     # SSL-Certificate and private key
    ssl_certificate /etc/nginx/certs/cert.pem;
    ssl_certificate_key /etc/nginx/keys/key.pem;

    # The supported SSL Protocols
    ssl_protocols TLSv1.2 TLSv1.3;

    # DNS resolver needed for Docker
    resolver 127.0.0.11 valid=10s;

    # NGINX can impose its TLS cipher suite choices over those of a connecting browser, provided the browser supports them.
    ssl_prefer_server_ciphers on;

    # The supported SSL Ciphers
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-ECDSA-RC4-SHA:ECDHE-RSA-RC4-SHA:ECDH-ECDSA-RC4-SHA:ECDH-RSA-RC4-SHA:RC4-SHA';

    ssl_session_cache builtin:1000 shared:SSL:10m;

    server {
        listen 8080;
        listen [::]:8080;
        server_name localhost;

        location / {
            root /usr/share/nginx/html;
            index index.html;
        }
    }

    server {
        listen 8443 ssl;
        listen [::]:8443 ssl;
        http2 on;
        server_name secure-data-store;

        location / {
            set $upstream data-store:8080;
            proxy_pass http://$upstream;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host  $http_host;
            proxy_set_header X-Forwarded-Port  $server_port;
            proxy_read_timeout 43200s;
            client_max_body_size 100M;
        }
    }

    server {
        listen 8443 ssl;
        listen [::]:8443 ssl;
        server_name secure-keycloak;

        location / {
            set $upstream keycloak:8080;
            proxy_pass http://$upstream;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host  $http_host;
            proxy_set_header X-Forwarded-Port  $server_port;
            proxy_read_timeout 43200s;
        }
    }
}
